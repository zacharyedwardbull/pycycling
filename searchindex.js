Search.setIndex({"docnames": ["index", "pycycling", "pycycling.battery_service", "pycycling.cycling_power_service", "pycycling.cycling_speed_cadence_service", "pycycling.heart_rate_service", "pycycling.rear_view_radar", "pycycling.sterzo", "pycycling.tacx_trainer_control"], "filenames": ["index.rst", "pycycling.rst", "pycycling.battery_service.rst", "pycycling.cycling_power_service.rst", "pycycling.cycling_speed_cadence_service.rst", "pycycling.heart_rate_service.rst", "pycycling.rear_view_radar.rst", "pycycling.sterzo.rst", "pycycling.tacx_trainer_control.rst"], "titles": ["Welcome to pycycling\u2019s documentation!", "pycycling package", "pycycling.battery_service module", "pycycling.cycling_power_service module", "pycycling.cycling_speed_cadence_service module", "pycycling.heart_rate_service module", "pycycling.rear_view_radar module", "pycycling.sterzo module", "pycycling.tacx_trainer_control module"], "terms": {"packag": 0, "submodul": 0, "battery_servic": [0, 1], "modul": 0, "exampl": [0, 1], "batteryservic": [0, 1, 2], "cycling_power_servic": [0, 1], "cyclingpowerfeatur": [0, 1, 3], "cyclingpowermeasur": [0, 1, 3], "cyclingpowerservic": [0, 1, 3], "cyclingpowervector": [0, 1, 3], "distributesystemsupport": [0, 1, 3], "instantaneousmeasurementdirect": [0, 1, 3], "sensorloc": [0, 1, 3], "sensormeasurementcontext": [0, 1, 3], "cycling_speed_cadence_servic": [0, 1], "cscfeatur": [0, 1, 4], "cscmeasur": [0, 1, 4], "cyclingspeedcadenceservic": [0, 1, 4], "heart_rate_servic": [0, 1], "heartratemeasur": [0, 1, 5], "heartrateservic": [0, 1, 5], "rear_view_radar": [0, 1], "radarmeasur": [0, 1, 6], "rearviewradarservic": [0, 1, 6], "sterzo": [0, 1], "tacx_trainer_control": [0, 1], "smart": [0, 1], "trainer": [0, 1, 3], "mode": [0, 1], "oper": [0, 1], "commandstatu": [0, 1, 8], "commandstatusdata": [0, 1, 8], "equipmenttyp": [0, 1, 8], "festat": [0, 1, 8], "generalfedata": [0, 1, 8], "roadsurfac": [0, 1, 8], "specifictrainerdata": [0, 1, 8], "tacxtrainercontrol": [0, 1, 8], "targetpowerlimit": [0, 1, 8], "obtain": [0, 2, 3, 6, 8], "address": [0, 2, 3, 6, 8], "your": [0, 2, 3, 6, 8], "devic": [0, 2, 3, 6, 8], "index": 0, "search": 0, "page": 0, "get_battery_level": [1, 2], "accumulated_energy_support": [1, 3], "accumulated_torque_support": [1, 3], "chain_length_adjustment_support": [1, 3], "chain_weight_adjustment_support": [1, 3], "crank_length_adjustment_support": [1, 3], "crank_rev_support": [1, 3, 4], "cycling_power_measurement_content_masking_support": [1, 3], "dead_spot_angles_support": [1, 3], "distribute_system_support": [1, 3], "enhanced_offset_compensation_support": [1, 3], "extreme_magnitudes_support": [1, 3], "factory_calibration_date_support": [1, 3], "instantaneous_measurement_direction_support": [1, 3], "multiple_locations_support": [1, 3, 4], "offset_compensation_support": [1, 3], "pedal_power_balance_support": [1, 3], "sensor_measurement_context": [1, 3], "span_length_adjustment_support": [1, 3], "wheel_rev_support": [1, 3, 4], "accumulated_energi": [1, 3], "accumulated_torqu": [1, 3], "bottom_dead_spot_angl": [1, 3], "cumulative_crank_rev": [1, 3, 4], "cumulative_wheel_rev": [1, 3, 4], "instantaneous_pow": [1, 3, 8], "last_crank_event_tim": [1, 3, 4], "last_wheel_event_tim": [1, 3, 4], "maximum_force_magnitud": [1, 3], "maximum_torque_magnitud": [1, 3], "minimum_force_magnitud": [1, 3], "minimum_torque_magnitud": [1, 3], "pedal_power_bal": [1, 3], "top_dead_spot_angl": [1, 3], "disable_cycling_power_measurement_notif": [1, 3], "disable_cycling_power_vector_notif": [1, 3], "enable_cycling_power_measurement_notif": [1, 3], "enable_cycling_power_vector_notif": [1, 3], "get_cycling_power_featur": [1, 3], "get_sensor_loc": [1, 3], "set_cycling_power_measurement_handl": [1, 3], "set_cycling_power_vector_handl": [1, 3], "first_crank_measurement_angl": [1, 3], "instantaneous_force_magnitud": [1, 3], "instantaneous_measurement_direct": [1, 3], "instantaneous_torque_magnitud": [1, 3], "distributed_system_support": [1, 3], "no_distributed_system_support": [1, 3], "rfu": [1, 3], "unspecifi": [1, 3], "lateral_compon": [1, 3], "radial_compon": [1, 3], "tangential_compon": [1, 3], "unknown": [1, 3], "chain_r": [1, 3], "chainstai": [1, 3], "chest": [1, 3], "front_hub": [1, 3], "front_wheel": [1, 3], "hip": [1, 3], "in_sho": [1, 3], "left_crank": [1, 3], "left_ped": [1, 3], "other": [1, 3, 6, 8], "rear_dropout": [1, 3], "rear_hub": [1, 3], "rear_wheel": [1, 3], "right_crank": [1, 3], "right_ped": [1, 3], "spider": [1, 3], "top_of_sho": [1, 3], "force_bas": [1, 3], "torque_bas": [1, 3], "disable_csc_measurement_notif": [1, 4], "enable_csc_measurement_notif": [1, 4], "get_csc_featur": [1, 4], "set_csc_measurement_handl": [1, 4], "bpm": [1, 5], "energy_expend": [1, 5], "rr_interv": [1, 5], "sensor_contact": [1, 5], "disable_hr_measurement_notif": [1, 5], "enable_hr_measurement_notif": [1, 5], "set_hr_measurement_handl": [1, 5], "distanc": [1, 6], "speed": [1, 6, 8], "threat_id": [1, 6], "disable_radar_measurement_notif": [1, 6], "enable_radar_measurement_notif": [1, 6], "set_radar_measurement_handl": [1, 6], "disable_steering_measurement_notif": [1, 7], "enable_steering_measurement_notif": [1, 7], "set_steering_measurement_callback": [1, 7], "fail": [1, 8], "not_support": [1, 8], "reject": [1, 8], "success": [1, 8], "uniniti": [1, 8], "command_statu": [1, 8], "data": [1, 3, 6, 8], "last_received_command": [1, 8], "climber": [1, 8], "ellipt": [1, 8], "nordic_ski": [1, 8], "reserv": [1, 8], "rower": [1, 8], "treadmil": [1, 8], "finish": [1, 8], "in_us": [1, 8], "readi": [1, 8], "distance_travel": [1, 8], "elapsed_tim": [1, 8], "equipment_typ": [1, 8], "fe_stat": [1, 8], "heart_rat": [1, 8], "lap_toggl": [1, 8], "brick_road": [1, 8], "cattle_grid": [1, 8], "cobblestones_hard": [1, 8], "cobblestones_soft": [1, 8], "concrete_pl": [1, 8], "gravel": [1, 8], "ic": [1, 8], "off_road": [1, 8], "simulation_off": [1, 8], "wooden_board": [1, 8], "accumulated_pow": [1, 8], "instantaneous_cad": [1, 8], "power_calibration_requir": [1, 8], "resistance_calibration_requir": [1, 8], "target_power_limit": [1, 8], "trainer_statu": [1, 8], "update_event_count": [1, 8], "user_configuration_requir": [1, 8], "disable_fec_notif": [1, 8], "enable_fec_notif": [1, 8], "request_data_pag": [1, 8], "set_basic_resist": [1, 8], "set_command_status_data_page_handl": [1, 8], "set_general_fe_data_page_handl": [1, 8], "set_neo_mod": [1, 8], "set_specific_trainer_data_page_handl": [1, 8], "set_target_pow": [1, 8], "set_track_resist": [1, 8], "set_user_configur": [1, 8], "set_wind_resist": [1, 8], "limit_reach": [1, 8], "operating_at_target_or_no_target_set": [1, 8], "user_speed_too_high": [1, 8], "user_speed_too_low": [1, 8], "i": [1, 2, 3, 6, 8], "cross": 1, "platform": 1, "python": 1, "interact": [1, 2, 3, 6, 8], "variou": 1, "bluetooth": [1, 2, 3, 6, 8], "cycl": [1, 3, 8], "peripher": 1, "The": [1, 8], "provid": 1, "number": [1, 3, 4, 5, 6, 8], "class": [1, 2, 3, 4, 5, 6, 7, 8], "which": [1, 2, 3, 6, 8], "wrap": 1, "around": [1, 2], "bleak": [1, 2, 3, 6, 8], "client": [1, 2, 3, 4, 5, 6, 7, 8], "object": [1, 2, 3, 4, 5, 6, 7, 8], "thi": [1, 2, 3, 6, 8], "document": 1, "includ": 1, "code": 1, "snippet": 1, "demonstr": [1, 8], "usag": 1, "each": [1, 8], "ha": [1, 8], "hardcod": 1, "id": 1, "you": [1, 8], "need": 1, "replac": 1, "follow": 1, "script": 1, "can": [1, 8], "us": [1, 8], "an": [1, 2], "list": 1, "all": 1, "avail": 1, "device_address": [1, 2, 3, 6, 8], "import": [1, 2, 3, 6, 8], "asyncio": [1, 2, 3, 6, 8], "from": [1, 2, 3, 6, 8], "discov": 1, "async": [1, 2, 3, 4, 5, 6, 7, 8], "def": [1, 2, 3, 6, 8], "run": [1, 2, 3, 6, 8], "await": [1, 2, 3, 6, 8], "d": 1, "print": [1, 2, 3, 6, 8], "__name__": [1, 2, 3, 6, 8], "__main__": [1, 2, 3, 6, 8], "o": [1, 2, 3, 6, 8], "environ": [1, 2, 3, 6, 8], "pythonasynciodebug": [1, 2, 3, 6, 8], "str": [1, 2, 3, 6, 8], "1": [1, 2, 3, 4, 5, 6, 8], "loop": [1, 2, 3, 6, 8], "get_event_loop": [1, 2, 3, 6, 8], "run_until_complet": [1, 2, 3, 6, 8], "A": [2, 3, 6, 8], "support": [2, 3, 6, 8], "batteri": 2, "servic": [2, 3, 6], "current": 2, "level": 2, "consol": [2, 3, 6, 8], "pleas": [2, 3, 6, 8], "see": [2, 3, 6, 8], "also": [2, 3, 6, 8], "inform": [2, 3, 6, 8], "bleakclient": [2, 3, 6, 8], "battery_level": 2, "f": 2, "here": [2, 8], "sourc": [2, 3, 4, 5, 6, 7, 8], "base": [2, 3, 4, 5, 6, 7, 8], "wrapper": 2, "backend": 2, "basebleakcli": 2, "ad": 2, "specif": [2, 8], "util": 2, "method": 2, "paramet": [2, 8], "valid": 2, "return": 2, "int": 2, "repres": [2, 8], "percentag": 2, "valu": [2, 3, 8], "100": [2, 8], "indic": 2, "fulli": 2, "charg": 2, "while": [2, 8], "0": [2, 3, 4, 5, 6, 8], "discharg": 2, "power": [3, 8], "most": [3, 8], "meter": 3, "some": 3, "turbo": [3, 8], "measur": 3, "broadcast": [3, 6], "my_measurement_handl": [3, 6], "is_connect": [3, 6, 8], "sleep": [3, 6, 8], "30": [3, 6], "eaaa3d1f": [3, 8], "6760": [3, 8], "4d77": [3, 8], "961e": [3, 8], "8ddac1cc9a": [3, 8], "tupl": [3, 4, 5, 6, 8], "alia": [3, 4, 5, 6, 8], "field": [3, 4, 5, 6, 8], "6": [3, 8], "11": 3, "12": 3, "10": [3, 8], "3": [3, 4, 5, 8], "8": [3, 8], "5": [3, 8], "18": 3, "17": 3, "4": [3, 8], "16": 3, "15": 3, "9": [3, 8], "7": [3, 8], "14": 3, "13": 3, "2": [3, 4, 5, 6, 8], "callback": [3, 4, 5, 6, 7, 8], "name": [3, 8], "none": [3, 8], "qualnam": [3, 8], "type": [3, 8], "start": [3, 8], "boundari": [3, 8], "enum": [3, 8], "le": 6, "radar": 6, "rdr": 6, "jason": 6, "sohn": 6, "2022": 6, "test": 6, "garmin": 6, "varia": 6, "rvr315": 6, "model": 6, "ar": [6, 8], "expect": 6, "rtr515": 6, "rtr516": 6, "german": 6, "market": 6, "version": 6, "rct715": 6, "bryton": 6, "gardia": 6, "r300": 6, "magen": 6, "l508": 6, "radar_servic": 6, "device_address_her": 6, "tacx": 8, "protocol": 8, "variat": 8, "ant": 8, "fe": 8, "c": 8, "standard": 8, "ble": 8, "instead": 8, "releas": 8, "mani": 8, "befor": 8, "now": 8, "common": 8, "ftm": 8, "wa": 8, "finalis": 8, "facilit": 8, "neo": 8, "road": 8, "feel": 8, "featur": 8, "defin": 8, "few": 8, "To": 8, "understand": 8, "differ": 8, "between": 8, "littl": 8, "theori": 8, "requir": 8, "fundament": 8, "when": 8, "two": 8, "forc": 8, "come": 8, "plai": 8, "resist": 8, "These": 8, "typic": 8, "roll": 8, "wind": 8, "gravit": 8, "thei": 8, "would": 8, "bring": 8, "back": 8, "stop": 8, "inerti": 8, "chang": 8, "veloc": 8, "think": 8, "newton": 8, "": 8, "second": 8, "law": 8, "work": 8, "against": 8, "acceler": 8, "make": 8, "hard": 8, "get": 8, "go": 8, "even": 8, "harder": 8, "heavier": 8, "howev": 8, "pedal": 8, "favour": 8, "help": 8, "counter": 8, "slow": 8, "down": 8, "allow": 8, "coast": 8, "along": 8, "appli": 8, "through": 8, "heavi": 8, "flywheel": 8, "brake": 8, "somewhat": 8, "uniqu": 8, "both": 8, "electromagnet": 8, "alter": 8, "applic": 8, "onli": 8, "first": 8, "ll": 8, "try": 8, "explain": 8, "word": 8, "what": 8, "doe": 8, "basic": 8, "simpl": 8, "directli": 8, "set": 8, "It": 8, "assum": 8, "small": 8, "preset": 8, "rider": 8, "mass": 8, "mean": 8, "simul": 8, "becaus": 8, "therefor": 8, "incorrect": 8, "In": 8, "activ": 8, "comput": 8, "intern": 8, "physic": 8, "equat": 8, "configur": 8, "track": 8, "inclin": 8, "For": 8, "full": 8, "detail": 8, "refer": 8, "dynam": 8, "adjust": 8, "so": 8, "correct": 8, "strongli": 8, "recommend": 8, "ani": 8, "zwift": 8, "etc": 8, "target": 8, "erg": 8, "exert": 8, "order": 8, "maintain": 8, "constant": 8, "output": 8, "isokinet": 8, "cadenc": 8, "info": 8, "isoton": 8, "special": 8, "case": 8, "where": 8, "zero": 8, "rather": 8, "than": 8, "bike": 8, "weight": 8, "user": 8, "drag": 8, "initi": 8, "20": 8, "later": 8, "40": 8, "my_page_handl": 8, "surfac": 8, "page_numb": 8, "specifi": 8, "isokinetic_mod": 8, "fals": 8, "isokinetic_spe": 8, "road_surface_pattern": 8, "road_surface_pattern_intens": 8, "255": 8, "train": 8, "enabl": 8, "intens": 8, "note": 8, "50": 8, "fairli": 8, "untest": 8, "mai": 8, "damag": 8, "target_pow": 8, "watt": 8, "grade": 8, "coefficient_of_rolling_resist": 8, "slope": 8, "coeffici": 8, "dimensionless": 8, "unit": 8, "user_weight": 8, "bicycle_weight": 8, "bicycle_wheel_diamet": 8, "gear_ratio": 8, "kilogram": 8, "bicycl": 8, "diamet": 8, "wheel": 8, "metr": 8, "gear": 8, "ratio": 8, "front": 8, "chain": 8, "ring": 8, "teeth": 8, "rear": 8, "cog": 8, "wind_resistance_coeffici": 8, "wind_spe": 8, "drafting_factor": 8, "product": 8, "frontal": 8, "area": 8, "air": 8, "densiti": 8, "kg": 8, "m": 8, "act": 8, "cyclist": 8, "km": 8, "h": 8, "posit": 8, "head": 8, "neg": 8, "tail": 8, "scale": 8, "draft": 8, "behind": 8, "virtual": 8, "oppon": 8}, "objects": {"": [[1, 0, 0, "-", "pycycling"]], "pycycling": [[2, 0, 0, "-", "battery_service"], [3, 0, 0, "-", "cycling_power_service"], [4, 0, 0, "-", "cycling_speed_cadence_service"], [5, 0, 0, "-", "heart_rate_service"], [6, 0, 0, "-", "rear_view_radar"], [7, 0, 0, "-", "sterzo"], [8, 0, 0, "-", "tacx_trainer_control"]], "pycycling.battery_service": [[2, 1, 1, "", "BatteryService"]], "pycycling.battery_service.BatteryService": [[2, 2, 1, "", "get_battery_level"]], "pycycling.cycling_power_service": [[3, 1, 1, "", "CyclingPowerFeature"], [3, 1, 1, "", "CyclingPowerMeasurement"], [3, 1, 1, "", "CyclingPowerService"], [3, 1, 1, "", "CyclingPowerVector"], [3, 1, 1, "", "DistributeSystemSupport"], [3, 1, 1, "", "InstantaneousMeasurementDirection"], [3, 1, 1, "", "SensorLocation"], [3, 1, 1, "", "SensorMeasurementContext"]], "pycycling.cycling_power_service.CyclingPowerFeature": [[3, 3, 1, "", "accumulated_energy_supported"], [3, 3, 1, "", "accumulated_torque_supported"], [3, 3, 1, "", "chain_length_adjustment_supported"], [3, 3, 1, "", "chain_weight_adjustment_supported"], [3, 3, 1, "", "crank_length_adjustment_supported"], [3, 3, 1, "", "crank_rev_supported"], [3, 3, 1, "", "cycling_power_measurement_content_masking_supported"], [3, 3, 1, "", "dead_spot_angles_supported"], [3, 3, 1, "", "distribute_system_support"], [3, 3, 1, "", "enhanced_offset_compensation_supported"], [3, 3, 1, "", "extreme_magnitudes_supported"], [3, 3, 1, "", "factory_calibration_date_supported"], [3, 3, 1, "", "instantaneous_measurement_direction_supported"], [3, 3, 1, "", "multiple_locations_supported"], [3, 3, 1, "", "offset_compensation_supported"], [3, 3, 1, "", "pedal_power_balance_supported"], [3, 3, 1, "", "sensor_measurement_context"], [3, 3, 1, "", "span_length_adjustment_supported"], [3, 3, 1, "", "wheel_rev_supported"]], "pycycling.cycling_power_service.CyclingPowerMeasurement": [[3, 3, 1, "", "accumulated_energy"], [3, 3, 1, "", "accumulated_torque"], [3, 3, 1, "", "bottom_dead_spot_angle"], [3, 3, 1, "", "cumulative_crank_revs"], [3, 3, 1, "", "cumulative_wheel_revs"], [3, 3, 1, "", "instantaneous_power"], [3, 3, 1, "", "last_crank_event_time"], [3, 3, 1, "", "last_wheel_event_time"], [3, 3, 1, "", "maximum_force_magnitude"], [3, 3, 1, "", "maximum_torque_magnitude"], [3, 3, 1, "", "minimum_force_magnitude"], [3, 3, 1, "", "minimum_torque_magnitude"], [3, 3, 1, "", "pedal_power_balance"], [3, 3, 1, "", "top_dead_spot_angle"]], "pycycling.cycling_power_service.CyclingPowerService": [[3, 2, 1, "", "disable_cycling_power_measurement_notifications"], [3, 2, 1, "", "disable_cycling_power_vector_notifications"], [3, 2, 1, "", "enable_cycling_power_measurement_notifications"], [3, 2, 1, "", "enable_cycling_power_vector_notifications"], [3, 2, 1, "", "get_cycling_power_feature"], [3, 2, 1, "", "get_sensor_location"], [3, 2, 1, "", "set_cycling_power_measurement_handler"], [3, 2, 1, "", "set_cycling_power_vector_handler"]], "pycycling.cycling_power_service.CyclingPowerVector": [[3, 3, 1, "", "cumulative_crank_revs"], [3, 3, 1, "", "first_crank_measurement_angle"], [3, 3, 1, "", "instantaneous_force_magnitudes"], [3, 3, 1, "", "instantaneous_measurement_direction"], [3, 3, 1, "", "instantaneous_torque_magnitudes"], [3, 3, 1, "", "last_crank_event_time"]], "pycycling.cycling_power_service.DistributeSystemSupport": [[3, 3, 1, "", "distributed_system_support"], [3, 3, 1, "", "no_distributed_system_support"], [3, 3, 1, "", "rfu"], [3, 3, 1, "", "unspecified"]], "pycycling.cycling_power_service.InstantaneousMeasurementDirection": [[3, 3, 1, "", "lateral_component"], [3, 3, 1, "", "radial_component"], [3, 3, 1, "", "tangential_component"], [3, 3, 1, "", "unknown"]], "pycycling.cycling_power_service.SensorLocation": [[3, 3, 1, "", "chain_ring"], [3, 3, 1, "", "chainstay"], [3, 3, 1, "", "chest"], [3, 3, 1, "", "front_hub"], [3, 3, 1, "", "front_wheel"], [3, 3, 1, "", "hip"], [3, 3, 1, "", "in_shoe"], [3, 3, 1, "", "left_crank"], [3, 3, 1, "", "left_pedal"], [3, 3, 1, "", "other"], [3, 3, 1, "", "rear_dropout"], [3, 3, 1, "", "rear_hub"], [3, 3, 1, "", "rear_wheel"], [3, 3, 1, "", "right_crank"], [3, 3, 1, "", "right_pedal"], [3, 3, 1, "", "spider"], [3, 3, 1, "", "top_of_shoe"]], "pycycling.cycling_power_service.SensorMeasurementContext": [[3, 3, 1, "", "force_based"], [3, 3, 1, "", "torque_based"]], "pycycling.cycling_speed_cadence_service": [[4, 1, 1, "", "CSCFeature"], [4, 1, 1, "", "CSCMeasurement"], [4, 1, 1, "", "CyclingSpeedCadenceService"]], "pycycling.cycling_speed_cadence_service.CSCFeature": [[4, 3, 1, "", "crank_rev_supported"], [4, 3, 1, "", "multiple_locations_supported"], [4, 3, 1, "", "wheel_rev_supported"]], "pycycling.cycling_speed_cadence_service.CSCMeasurement": [[4, 3, 1, "", "cumulative_crank_revs"], [4, 3, 1, "", "cumulative_wheel_revs"], [4, 3, 1, "", "last_crank_event_time"], [4, 3, 1, "", "last_wheel_event_time"]], "pycycling.cycling_speed_cadence_service.CyclingSpeedCadenceService": [[4, 2, 1, "", "disable_csc_measurement_notifications"], [4, 2, 1, "", "enable_csc_measurement_notifications"], [4, 2, 1, "", "get_csc_feature"], [4, 2, 1, "", "set_csc_measurement_handler"]], "pycycling.heart_rate_service": [[5, 1, 1, "", "HeartRateMeasurement"], [5, 1, 1, "", "HeartRateService"]], "pycycling.heart_rate_service.HeartRateMeasurement": [[5, 3, 1, "", "bpm"], [5, 3, 1, "", "energy_expended"], [5, 3, 1, "", "rr_interval"], [5, 3, 1, "", "sensor_contact"]], "pycycling.heart_rate_service.HeartRateService": [[5, 2, 1, "", "disable_hr_measurement_notifications"], [5, 2, 1, "", "enable_hr_measurement_notifications"], [5, 2, 1, "", "set_hr_measurement_handler"]], "pycycling.rear_view_radar": [[6, 1, 1, "", "RadarMeasurement"], [6, 1, 1, "", "RearViewRadarService"]], "pycycling.rear_view_radar.RadarMeasurement": [[6, 3, 1, "", "distance"], [6, 3, 1, "", "speed"], [6, 3, 1, "", "threat_id"]], "pycycling.rear_view_radar.RearViewRadarService": [[6, 2, 1, "", "disable_radar_measurement_notifications"], [6, 2, 1, "", "enable_radar_measurement_notifications"], [6, 2, 1, "", "set_radar_measurement_handler"]], "pycycling.sterzo": [[7, 1, 1, "", "Sterzo"]], "pycycling.sterzo.Sterzo": [[7, 2, 1, "", "disable_steering_measurement_notifications"], [7, 2, 1, "", "enable_steering_measurement_notifications"], [7, 2, 1, "", "set_steering_measurement_callback"]], "pycycling.tacx_trainer_control": [[8, 1, 1, "", "CommandStatus"], [8, 1, 1, "", "CommandStatusData"], [8, 1, 1, "", "EquipmentType"], [8, 1, 1, "", "FEState"], [8, 1, 1, "", "GeneralFEData"], [8, 1, 1, "", "RoadSurface"], [8, 1, 1, "", "SpecificTrainerData"], [8, 1, 1, "", "TacxTrainerControl"], [8, 1, 1, "", "TargetPowerLimit"]], "pycycling.tacx_trainer_control.CommandStatus": [[8, 3, 1, "", "fail"], [8, 3, 1, "", "not_supported"], [8, 3, 1, "", "rejected"], [8, 3, 1, "", "success"], [8, 3, 1, "", "uninitialized"]], "pycycling.tacx_trainer_control.CommandStatusData": [[8, 3, 1, "", "command_status"], [8, 3, 1, "", "data"], [8, 3, 1, "", "last_received_command"]], "pycycling.tacx_trainer_control.EquipmentType": [[8, 3, 1, "", "climber"], [8, 3, 1, "", "elliptical"], [8, 3, 1, "", "nordic_skier"], [8, 3, 1, "", "reserved"], [8, 3, 1, "", "rower"], [8, 3, 1, "", "trainer"], [8, 3, 1, "", "treadmill"]], "pycycling.tacx_trainer_control.FEState": [[8, 3, 1, "", "finished"], [8, 3, 1, "", "in_use"], [8, 3, 1, "", "ready"], [8, 3, 1, "", "reserved"]], "pycycling.tacx_trainer_control.GeneralFEData": [[8, 3, 1, "", "distance_travelled"], [8, 3, 1, "", "elapsed_time"], [8, 3, 1, "", "equipment_type"], [8, 3, 1, "", "fe_state"], [8, 3, 1, "", "heart_rate"], [8, 3, 1, "", "lap_toggle"], [8, 3, 1, "", "speed"]], "pycycling.tacx_trainer_control.RoadSurface": [[8, 3, 1, "", "BRICK_ROAD"], [8, 3, 1, "", "CATTLE_GRID"], [8, 3, 1, "", "COBBLESTONES_HARD"], [8, 3, 1, "", "COBBLESTONES_SOFT"], [8, 3, 1, "", "CONCRETE_PLATES"], [8, 3, 1, "", "GRAVEL"], [8, 3, 1, "", "ICE"], [8, 3, 1, "", "OFF_ROAD"], [8, 3, 1, "", "SIMULATION_OFF"], [8, 3, 1, "", "WOODEN_BOARDS"]], "pycycling.tacx_trainer_control.SpecificTrainerData": [[8, 3, 1, "", "accumulated_power"], [8, 3, 1, "", "fe_state"], [8, 3, 1, "", "instantaneous_cadence"], [8, 3, 1, "", "instantaneous_power"], [8, 3, 1, "", "lap_toggle"], [8, 3, 1, "", "power_calibration_required"], [8, 3, 1, "", "resistance_calibration_required"], [8, 3, 1, "", "target_power_limits"], [8, 3, 1, "", "trainer_status"], [8, 3, 1, "", "update_event_count"], [8, 3, 1, "", "user_configuration_required"]], "pycycling.tacx_trainer_control.TacxTrainerControl": [[8, 2, 1, "", "disable_fec_notifications"], [8, 2, 1, "", "enable_fec_notifications"], [8, 2, 1, "", "request_data_page"], [8, 2, 1, "", "set_basic_resistance"], [8, 2, 1, "", "set_command_status_data_page_handler"], [8, 2, 1, "", "set_general_fe_data_page_handler"], [8, 2, 1, "", "set_neo_modes"], [8, 2, 1, "", "set_specific_trainer_data_page_handler"], [8, 2, 1, "", "set_target_power"], [8, 2, 1, "", "set_track_resistance"], [8, 2, 1, "", "set_user_configuration"], [8, 2, 1, "", "set_wind_resistance"]], "pycycling.tacx_trainer_control.TargetPowerLimit": [[8, 3, 1, "", "limit_reached"], [8, 3, 1, "", "operating_at_target_or_no_target_set"], [8, 3, 1, "", "user_speed_too_high"], [8, 3, 1, "", "user_speed_too_low"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "pycycl": [0, 1, 2, 3, 4, 5, 6, 7, 8], "": 0, "document": 0, "content": [0, 1], "indic": 0, "tabl": 0, "packag": 1, "submodul": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8], "obtain": 1, "address": 1, "your": 1, "devic": 1, "battery_servic": 2, "exampl": [2, 3, 6, 8], "cycling_power_servic": 3, "cycling_speed_cadence_servic": 4, "heart_rate_servic": 5, "rear_view_radar": 6, "sterzo": 7, "tacx_trainer_control": 8, "smart": 8, "trainer": 8, "mode": 8, "oper": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Welcome to pycycling\u2019s documentation!": [[0, "welcome-to-pycycling-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "pycycling package": [[1, "pycycling-package"]], "Submodules": [[1, "submodules"]], "Module contents": [[1, "module-pycycling"]], "Obtaining the address of your device": [[1, "obtaining-the-address-of-your-device"]], "pycycling.battery_service module": [[2, "module-pycycling.battery_service"]], "Example": [[2, "example"], [3, "example"], [6, "example"], [8, "example"]], "pycycling.cycling_power_service module": [[3, "module-pycycling.cycling_power_service"]], "pycycling.cycling_speed_cadence_service module": [[4, "module-pycycling.cycling_speed_cadence_service"]], "pycycling.heart_rate_service module": [[5, "module-pycycling.heart_rate_service"]], "pycycling.rear_view_radar module": [[6, "module-pycycling.rear_view_radar"]], "pycycling.sterzo module": [[7, "module-pycycling.sterzo"]], "pycycling.tacx_trainer_control module": [[8, "module-pycycling.tacx_trainer_control"]], "Smart trainer modes of operation": [[8, "smart-trainer-modes-of-operation"]]}, "indexentries": {"module": [[1, "module-pycycling"], [2, "module-pycycling.battery_service"], [3, "module-pycycling.cycling_power_service"], [4, "module-pycycling.cycling_speed_cadence_service"], [5, "module-pycycling.heart_rate_service"], [6, "module-pycycling.rear_view_radar"], [7, "module-pycycling.sterzo"], [8, "module-pycycling.tacx_trainer_control"]], "pycycling": [[1, "module-pycycling"]], "batteryservice (class in pycycling.battery_service)": [[2, "pycycling.battery_service.BatteryService"]], "get_battery_level() (pycycling.battery_service.batteryservice method)": [[2, "pycycling.battery_service.BatteryService.get_battery_level"]], "pycycling.battery_service": [[2, "module-pycycling.battery_service"]], "cyclingpowerfeature (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature"]], "cyclingpowermeasurement (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement"]], "cyclingpowerservice (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.CyclingPowerService"]], "cyclingpowervector (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.CyclingPowerVector"]], "distributesystemsupport (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.DistributeSystemSupport"]], "instantaneousmeasurementdirection (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.InstantaneousMeasurementDirection"]], "sensorlocation (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.SensorLocation"]], "sensormeasurementcontext (class in pycycling.cycling_power_service)": [[3, "pycycling.cycling_power_service.SensorMeasurementContext"]], "accumulated_energy (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.accumulated_energy"]], "accumulated_energy_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.accumulated_energy_supported"]], "accumulated_torque (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.accumulated_torque"]], "accumulated_torque_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.accumulated_torque_supported"]], "bottom_dead_spot_angle (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.bottom_dead_spot_angle"]], "chain_length_adjustment_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.chain_length_adjustment_supported"]], "chain_ring (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.chain_ring"]], "chain_weight_adjustment_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.chain_weight_adjustment_supported"]], "chainstay (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.chainstay"]], "chest (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.chest"]], "crank_length_adjustment_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.crank_length_adjustment_supported"]], "crank_rev_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.crank_rev_supported"]], "cumulative_crank_revs (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.cumulative_crank_revs"]], "cumulative_crank_revs (pycycling.cycling_power_service.cyclingpowervector attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerVector.cumulative_crank_revs"]], "cumulative_wheel_revs (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.cumulative_wheel_revs"]], "cycling_power_measurement_content_masking_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.cycling_power_measurement_content_masking_supported"]], "dead_spot_angles_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.dead_spot_angles_supported"]], "disable_cycling_power_measurement_notifications() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.disable_cycling_power_measurement_notifications"]], "disable_cycling_power_vector_notifications() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.disable_cycling_power_vector_notifications"]], "distribute_system_support (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.distribute_system_support"]], "distributed_system_support (pycycling.cycling_power_service.distributesystemsupport attribute)": [[3, "pycycling.cycling_power_service.DistributeSystemSupport.distributed_system_support"]], "enable_cycling_power_measurement_notifications() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.enable_cycling_power_measurement_notifications"]], "enable_cycling_power_vector_notifications() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.enable_cycling_power_vector_notifications"]], "enhanced_offset_compensation_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.enhanced_offset_compensation_supported"]], "extreme_magnitudes_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.extreme_magnitudes_supported"]], "factory_calibration_date_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.factory_calibration_date_supported"]], "first_crank_measurement_angle (pycycling.cycling_power_service.cyclingpowervector attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerVector.first_crank_measurement_angle"]], "force_based (pycycling.cycling_power_service.sensormeasurementcontext attribute)": [[3, "pycycling.cycling_power_service.SensorMeasurementContext.force_based"]], "front_hub (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.front_hub"]], "front_wheel (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.front_wheel"]], "get_cycling_power_feature() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.get_cycling_power_feature"]], "get_sensor_location() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.get_sensor_location"]], "hip (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.hip"]], "in_shoe (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.in_shoe"]], "instantaneous_force_magnitudes (pycycling.cycling_power_service.cyclingpowervector attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerVector.instantaneous_force_magnitudes"]], "instantaneous_measurement_direction (pycycling.cycling_power_service.cyclingpowervector attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerVector.instantaneous_measurement_direction"]], "instantaneous_measurement_direction_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.instantaneous_measurement_direction_supported"]], "instantaneous_power (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.instantaneous_power"]], "instantaneous_torque_magnitudes (pycycling.cycling_power_service.cyclingpowervector attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerVector.instantaneous_torque_magnitudes"]], "last_crank_event_time (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.last_crank_event_time"]], "last_crank_event_time (pycycling.cycling_power_service.cyclingpowervector attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerVector.last_crank_event_time"]], "last_wheel_event_time (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.last_wheel_event_time"]], "lateral_component (pycycling.cycling_power_service.instantaneousmeasurementdirection attribute)": [[3, "pycycling.cycling_power_service.InstantaneousMeasurementDirection.lateral_component"]], "left_crank (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.left_crank"]], "left_pedal (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.left_pedal"]], "maximum_force_magnitude (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.maximum_force_magnitude"]], "maximum_torque_magnitude (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.maximum_torque_magnitude"]], "minimum_force_magnitude (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.minimum_force_magnitude"]], "minimum_torque_magnitude (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.minimum_torque_magnitude"]], "multiple_locations_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.multiple_locations_supported"]], "no_distributed_system_support (pycycling.cycling_power_service.distributesystemsupport attribute)": [[3, "pycycling.cycling_power_service.DistributeSystemSupport.no_distributed_system_support"]], "offset_compensation_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.offset_compensation_supported"]], "other (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.other"]], "pedal_power_balance (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.pedal_power_balance"]], "pedal_power_balance_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.pedal_power_balance_supported"]], "pycycling.cycling_power_service": [[3, "module-pycycling.cycling_power_service"]], "radial_component (pycycling.cycling_power_service.instantaneousmeasurementdirection attribute)": [[3, "pycycling.cycling_power_service.InstantaneousMeasurementDirection.radial_component"]], "rear_dropout (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.rear_dropout"]], "rear_hub (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.rear_hub"]], "rear_wheel (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.rear_wheel"]], "rfu (pycycling.cycling_power_service.distributesystemsupport attribute)": [[3, "pycycling.cycling_power_service.DistributeSystemSupport.rfu"]], "right_crank (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.right_crank"]], "right_pedal (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.right_pedal"]], "sensor_measurement_context (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.sensor_measurement_context"]], "set_cycling_power_measurement_handler() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.set_cycling_power_measurement_handler"]], "set_cycling_power_vector_handler() (pycycling.cycling_power_service.cyclingpowerservice method)": [[3, "pycycling.cycling_power_service.CyclingPowerService.set_cycling_power_vector_handler"]], "span_length_adjustment_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.span_length_adjustment_supported"]], "spider (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.spider"]], "tangential_component (pycycling.cycling_power_service.instantaneousmeasurementdirection attribute)": [[3, "pycycling.cycling_power_service.InstantaneousMeasurementDirection.tangential_component"]], "top_dead_spot_angle (pycycling.cycling_power_service.cyclingpowermeasurement attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerMeasurement.top_dead_spot_angle"]], "top_of_shoe (pycycling.cycling_power_service.sensorlocation attribute)": [[3, "pycycling.cycling_power_service.SensorLocation.top_of_shoe"]], "torque_based (pycycling.cycling_power_service.sensormeasurementcontext attribute)": [[3, "pycycling.cycling_power_service.SensorMeasurementContext.torque_based"]], "unknown (pycycling.cycling_power_service.instantaneousmeasurementdirection attribute)": [[3, "pycycling.cycling_power_service.InstantaneousMeasurementDirection.unknown"]], "unspecified (pycycling.cycling_power_service.distributesystemsupport attribute)": [[3, "pycycling.cycling_power_service.DistributeSystemSupport.unspecified"]], "wheel_rev_supported (pycycling.cycling_power_service.cyclingpowerfeature attribute)": [[3, "pycycling.cycling_power_service.CyclingPowerFeature.wheel_rev_supported"]], "cscfeature (class in pycycling.cycling_speed_cadence_service)": [[4, "pycycling.cycling_speed_cadence_service.CSCFeature"]], "cscmeasurement (class in pycycling.cycling_speed_cadence_service)": [[4, "pycycling.cycling_speed_cadence_service.CSCMeasurement"]], "cyclingspeedcadenceservice (class in pycycling.cycling_speed_cadence_service)": [[4, "pycycling.cycling_speed_cadence_service.CyclingSpeedCadenceService"]], "crank_rev_supported (pycycling.cycling_speed_cadence_service.cscfeature attribute)": [[4, "pycycling.cycling_speed_cadence_service.CSCFeature.crank_rev_supported"]], "cumulative_crank_revs (pycycling.cycling_speed_cadence_service.cscmeasurement attribute)": [[4, "pycycling.cycling_speed_cadence_service.CSCMeasurement.cumulative_crank_revs"]], "cumulative_wheel_revs (pycycling.cycling_speed_cadence_service.cscmeasurement attribute)": [[4, "pycycling.cycling_speed_cadence_service.CSCMeasurement.cumulative_wheel_revs"]], "disable_csc_measurement_notifications() (pycycling.cycling_speed_cadence_service.cyclingspeedcadenceservice method)": [[4, "pycycling.cycling_speed_cadence_service.CyclingSpeedCadenceService.disable_csc_measurement_notifications"]], "enable_csc_measurement_notifications() (pycycling.cycling_speed_cadence_service.cyclingspeedcadenceservice method)": [[4, "pycycling.cycling_speed_cadence_service.CyclingSpeedCadenceService.enable_csc_measurement_notifications"]], "get_csc_feature() (pycycling.cycling_speed_cadence_service.cyclingspeedcadenceservice method)": [[4, "pycycling.cycling_speed_cadence_service.CyclingSpeedCadenceService.get_csc_feature"]], "last_crank_event_time (pycycling.cycling_speed_cadence_service.cscmeasurement attribute)": [[4, "pycycling.cycling_speed_cadence_service.CSCMeasurement.last_crank_event_time"]], "last_wheel_event_time (pycycling.cycling_speed_cadence_service.cscmeasurement attribute)": [[4, "pycycling.cycling_speed_cadence_service.CSCMeasurement.last_wheel_event_time"]], "multiple_locations_supported (pycycling.cycling_speed_cadence_service.cscfeature attribute)": [[4, "pycycling.cycling_speed_cadence_service.CSCFeature.multiple_locations_supported"]], "pycycling.cycling_speed_cadence_service": [[4, "module-pycycling.cycling_speed_cadence_service"]], "set_csc_measurement_handler() (pycycling.cycling_speed_cadence_service.cyclingspeedcadenceservice method)": [[4, "pycycling.cycling_speed_cadence_service.CyclingSpeedCadenceService.set_csc_measurement_handler"]], "wheel_rev_supported (pycycling.cycling_speed_cadence_service.cscfeature attribute)": [[4, "pycycling.cycling_speed_cadence_service.CSCFeature.wheel_rev_supported"]], "heartratemeasurement (class in pycycling.heart_rate_service)": [[5, "pycycling.heart_rate_service.HeartRateMeasurement"]], "heartrateservice (class in pycycling.heart_rate_service)": [[5, "pycycling.heart_rate_service.HeartRateService"]], "bpm (pycycling.heart_rate_service.heartratemeasurement attribute)": [[5, "pycycling.heart_rate_service.HeartRateMeasurement.bpm"]], "disable_hr_measurement_notifications() (pycycling.heart_rate_service.heartrateservice method)": [[5, "pycycling.heart_rate_service.HeartRateService.disable_hr_measurement_notifications"]], "enable_hr_measurement_notifications() (pycycling.heart_rate_service.heartrateservice method)": [[5, "pycycling.heart_rate_service.HeartRateService.enable_hr_measurement_notifications"]], "energy_expended (pycycling.heart_rate_service.heartratemeasurement attribute)": [[5, "pycycling.heart_rate_service.HeartRateMeasurement.energy_expended"]], "pycycling.heart_rate_service": [[5, "module-pycycling.heart_rate_service"]], "rr_interval (pycycling.heart_rate_service.heartratemeasurement attribute)": [[5, "pycycling.heart_rate_service.HeartRateMeasurement.rr_interval"]], "sensor_contact (pycycling.heart_rate_service.heartratemeasurement attribute)": [[5, "pycycling.heart_rate_service.HeartRateMeasurement.sensor_contact"]], "set_hr_measurement_handler() (pycycling.heart_rate_service.heartrateservice method)": [[5, "pycycling.heart_rate_service.HeartRateService.set_hr_measurement_handler"]], "radarmeasurement (class in pycycling.rear_view_radar)": [[6, "pycycling.rear_view_radar.RadarMeasurement"]], "rearviewradarservice (class in pycycling.rear_view_radar)": [[6, "pycycling.rear_view_radar.RearViewRadarService"]], "disable_radar_measurement_notifications() (pycycling.rear_view_radar.rearviewradarservice method)": [[6, "pycycling.rear_view_radar.RearViewRadarService.disable_radar_measurement_notifications"]], "distance (pycycling.rear_view_radar.radarmeasurement attribute)": [[6, "pycycling.rear_view_radar.RadarMeasurement.distance"]], "enable_radar_measurement_notifications() (pycycling.rear_view_radar.rearviewradarservice method)": [[6, "pycycling.rear_view_radar.RearViewRadarService.enable_radar_measurement_notifications"]], "pycycling.rear_view_radar": [[6, "module-pycycling.rear_view_radar"]], "set_radar_measurement_handler() (pycycling.rear_view_radar.rearviewradarservice method)": [[6, "pycycling.rear_view_radar.RearViewRadarService.set_radar_measurement_handler"]], "speed (pycycling.rear_view_radar.radarmeasurement attribute)": [[6, "pycycling.rear_view_radar.RadarMeasurement.speed"]], "threat_id (pycycling.rear_view_radar.radarmeasurement attribute)": [[6, "pycycling.rear_view_radar.RadarMeasurement.threat_id"]], "sterzo (class in pycycling.sterzo)": [[7, "pycycling.sterzo.Sterzo"]], "disable_steering_measurement_notifications() (pycycling.sterzo.sterzo method)": [[7, "pycycling.sterzo.Sterzo.disable_steering_measurement_notifications"]], "enable_steering_measurement_notifications() (pycycling.sterzo.sterzo method)": [[7, "pycycling.sterzo.Sterzo.enable_steering_measurement_notifications"]], "pycycling.sterzo": [[7, "module-pycycling.sterzo"]], "set_steering_measurement_callback() (pycycling.sterzo.sterzo method)": [[7, "pycycling.sterzo.Sterzo.set_steering_measurement_callback"]], "brick_road (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.BRICK_ROAD"]], "cattle_grid (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.CATTLE_GRID"]], "cobblestones_hard (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.COBBLESTONES_HARD"]], "cobblestones_soft (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.COBBLESTONES_SOFT"]], "concrete_plates (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.CONCRETE_PLATES"]], "commandstatus (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.CommandStatus"]], "commandstatusdata (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.CommandStatusData"]], "equipmenttype (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.EquipmentType"]], "festate (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.FEState"]], "gravel (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.GRAVEL"]], "generalfedata (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.GeneralFEData"]], "ice (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.ICE"]], "off_road (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.OFF_ROAD"]], "roadsurface (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.RoadSurface"]], "simulation_off (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.SIMULATION_OFF"]], "specifictrainerdata (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData"]], "tacxtrainercontrol (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl"]], "targetpowerlimit (class in pycycling.tacx_trainer_control)": [[8, "pycycling.tacx_trainer_control.TargetPowerLimit"]], "wooden_boards (pycycling.tacx_trainer_control.roadsurface attribute)": [[8, "pycycling.tacx_trainer_control.RoadSurface.WOODEN_BOARDS"]], "accumulated_power (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.accumulated_power"]], "climber (pycycling.tacx_trainer_control.equipmenttype attribute)": [[8, "pycycling.tacx_trainer_control.EquipmentType.climber"]], "command_status (pycycling.tacx_trainer_control.commandstatusdata attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatusData.command_status"]], "data (pycycling.tacx_trainer_control.commandstatusdata attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatusData.data"]], "disable_fec_notifications() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.disable_fec_notifications"]], "distance_travelled (pycycling.tacx_trainer_control.generalfedata attribute)": [[8, "pycycling.tacx_trainer_control.GeneralFEData.distance_travelled"]], "elapsed_time (pycycling.tacx_trainer_control.generalfedata attribute)": [[8, "pycycling.tacx_trainer_control.GeneralFEData.elapsed_time"]], "elliptical (pycycling.tacx_trainer_control.equipmenttype attribute)": [[8, "pycycling.tacx_trainer_control.EquipmentType.elliptical"]], "enable_fec_notifications() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.enable_fec_notifications"]], "equipment_type (pycycling.tacx_trainer_control.generalfedata attribute)": [[8, "pycycling.tacx_trainer_control.GeneralFEData.equipment_type"]], "fail (pycycling.tacx_trainer_control.commandstatus attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatus.fail"]], "fe_state (pycycling.tacx_trainer_control.generalfedata attribute)": [[8, "pycycling.tacx_trainer_control.GeneralFEData.fe_state"]], "fe_state (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.fe_state"]], "finished (pycycling.tacx_trainer_control.festate attribute)": [[8, "pycycling.tacx_trainer_control.FEState.finished"]], "heart_rate (pycycling.tacx_trainer_control.generalfedata attribute)": [[8, "pycycling.tacx_trainer_control.GeneralFEData.heart_rate"]], "in_use (pycycling.tacx_trainer_control.festate attribute)": [[8, "pycycling.tacx_trainer_control.FEState.in_use"]], "instantaneous_cadence (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.instantaneous_cadence"]], "instantaneous_power (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.instantaneous_power"]], "lap_toggle (pycycling.tacx_trainer_control.generalfedata attribute)": [[8, "pycycling.tacx_trainer_control.GeneralFEData.lap_toggle"]], "lap_toggle (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.lap_toggle"]], "last_received_command (pycycling.tacx_trainer_control.commandstatusdata attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatusData.last_received_command"]], "limit_reached (pycycling.tacx_trainer_control.targetpowerlimit attribute)": [[8, "pycycling.tacx_trainer_control.TargetPowerLimit.limit_reached"]], "nordic_skier (pycycling.tacx_trainer_control.equipmenttype attribute)": [[8, "pycycling.tacx_trainer_control.EquipmentType.nordic_skier"]], "not_supported (pycycling.tacx_trainer_control.commandstatus attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatus.not_supported"]], "operating_at_target_or_no_target_set (pycycling.tacx_trainer_control.targetpowerlimit attribute)": [[8, "pycycling.tacx_trainer_control.TargetPowerLimit.operating_at_target_or_no_target_set"]], "power_calibration_required (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.power_calibration_required"]], "pycycling.tacx_trainer_control": [[8, "module-pycycling.tacx_trainer_control"]], "ready (pycycling.tacx_trainer_control.festate attribute)": [[8, "pycycling.tacx_trainer_control.FEState.ready"]], "rejected (pycycling.tacx_trainer_control.commandstatus attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatus.rejected"]], "request_data_page() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.request_data_page"]], "reserved (pycycling.tacx_trainer_control.equipmenttype attribute)": [[8, "pycycling.tacx_trainer_control.EquipmentType.reserved"]], "reserved (pycycling.tacx_trainer_control.festate attribute)": [[8, "pycycling.tacx_trainer_control.FEState.reserved"]], "resistance_calibration_required (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.resistance_calibration_required"]], "rower (pycycling.tacx_trainer_control.equipmenttype attribute)": [[8, "pycycling.tacx_trainer_control.EquipmentType.rower"]], "set_basic_resistance() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_basic_resistance"]], "set_command_status_data_page_handler() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_command_status_data_page_handler"]], "set_general_fe_data_page_handler() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_general_fe_data_page_handler"]], "set_neo_modes() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_neo_modes"]], "set_specific_trainer_data_page_handler() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_specific_trainer_data_page_handler"]], "set_target_power() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_target_power"]], "set_track_resistance() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_track_resistance"]], "set_user_configuration() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_user_configuration"]], "set_wind_resistance() (pycycling.tacx_trainer_control.tacxtrainercontrol method)": [[8, "pycycling.tacx_trainer_control.TacxTrainerControl.set_wind_resistance"]], "speed (pycycling.tacx_trainer_control.generalfedata attribute)": [[8, "pycycling.tacx_trainer_control.GeneralFEData.speed"]], "success (pycycling.tacx_trainer_control.commandstatus attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatus.success"]], "target_power_limits (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.target_power_limits"]], "trainer (pycycling.tacx_trainer_control.equipmenttype attribute)": [[8, "pycycling.tacx_trainer_control.EquipmentType.trainer"]], "trainer_status (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.trainer_status"]], "treadmill (pycycling.tacx_trainer_control.equipmenttype attribute)": [[8, "pycycling.tacx_trainer_control.EquipmentType.treadmill"]], "uninitialized (pycycling.tacx_trainer_control.commandstatus attribute)": [[8, "pycycling.tacx_trainer_control.CommandStatus.uninitialized"]], "update_event_count (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.update_event_count"]], "user_configuration_required (pycycling.tacx_trainer_control.specifictrainerdata attribute)": [[8, "pycycling.tacx_trainer_control.SpecificTrainerData.user_configuration_required"]], "user_speed_too_high (pycycling.tacx_trainer_control.targetpowerlimit attribute)": [[8, "pycycling.tacx_trainer_control.TargetPowerLimit.user_speed_too_high"]], "user_speed_too_low (pycycling.tacx_trainer_control.targetpowerlimit attribute)": [[8, "pycycling.tacx_trainer_control.TargetPowerLimit.user_speed_too_low"]]}})